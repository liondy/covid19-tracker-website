{"version":3,"sources":["components/logo/covid.svg","components/navigation/home/Menu.js","components/layout/header/home/Home.js","components/layout/footer/Footer.js","pages/home/Home.js","components/navigation/pages/Menu.js","components/layout/header/pages/Pages.js","components/dropdowns/DropdownCustom.js","components/RangeFilter/DateFilter.js","components/data-status/Status.js","api/index.js","api/Api.js","components/graphs/GraphStatus.js","components/tables/Data.js","components/graphs/TopWorldGraph.js","pages/first/Country.js","components/tables/DataP.js","components/tables/DataRS.js","components/data-status/StatusP.js","pages/second/Province.js","components/contributors/Tentang.js","components/contributors/Contributors.js","pages/third/About.js","components/map/Map.js","components/tables/filters/FilterComponent.js","components/tables/ZoneTable.js","components/graphs/RiskPieChart.js","pages/fourth/Zone.js","config/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","Container","fluid","Row","className","Col","xs","md","to","Home","src","logo","alt","Footer","props","addedStyle","loc","color","position","backgroundColor","style","Menu","useState","isOpen","setIsOpen","location","useLocation","navBar","key","path","menu","pathname","map","curr","NavLink","tag","Link","Navbar","dark","expand","NavbarBrand","href","width","NavbarToggler","onClick","Collapse","navbar","Nav","Page","DropdownCustom","placeholder","data","onChange","selected","setSelected","dataSource","i","push","value","text","CountryCode","Slug","Country","Kode_Provi","Provinsi","console","log","Dropdown","defaultValue","search","selection","options","e","selectedCountry","some","element","DateFilter","country","isLoading","selectedDate","minDate","maxDate","isWorld","type","height","sm","locale","clearIcon","Status","confirmed","active","recovered","deaths","same","lastUpdate","duration","TotalConfirmed","TotalRecovered","TotalDeaths","length","Confirmed","Active","Recovered","Deaths","Math","abs","formatValue","toString","replace","end","formattingFn","toFixed","axios","create","baseURL","getSummaryData","a","API","get","response","getCountriesData","start","catch","err","getProvinces","reconstruct_response","features","temp","attributes","geometry","serverless","getProvinceHospital","getZonaIndonesia","getContributors","getPopulation","GraphStatus","curCountry","xData","activeData","recoverData","deathData","forEach","dataElement","curDate","Date","toLocaleString","split","yActiveData","name","yRecoverData","yDeathsData","optionsActive","chart","id","group","zoom","enabled","autoScaleYaxis","animations","easing","speed","animateGradually","delay","dynamicAnimation","colors","yaxis","labels","minWidth","xaxis","categories","optionsRecovered","optionsDeaths","series","Data","status","Table","hover","responsive","negara","index","Population","ConfirmedPercentage","RecoveredPercentage","DeathPercentage","TopWorldGraph","sortedConfirmedCountry","sortedRecoveredCountry","sortedDeathsCountry","modalConfirmed","setModalConfirmed","modalRecovered","setModalRecovered","modalDeath","setModalDeath","XconfirmedData","XrecoveredData","XdeathData","YconfirmedData","YrecoverData","YdeathData","confirmedData","slice","yConfirmedData","optionsConfirmed","formatter","val","opts","dataLabels","floating","min","max","toggleConfirmed","toggleRecovered","toggleDeath","Button","Modal","toggle","ModalHeader","charCode","ModalBody","ModalFooter","curSlug","setCurSlug","setCurCountry","summaryData","setSummaryData","setLastUpdate","countries","setCountries","dateInterval","setInterval","setSelectedDate","setConfirmedSorted","setRecoveredSorted","setDeathsSorted","setSame","setData","world","setWorld","isLoadingDate","setLoadingDate","isLoadingData","setLoadingData","days","months","fetchSummaryData","fetchedData","fetchedPop","undefined","Global","Countries","setUpdated","sortCountry","populations","newCountries","countPercentage","sortByConfirmed","sort","sortCountryBasedOn","sortByRecovered","sortByDeaths","countriesToBeSet","property","b","tanggalUpdate","date","tahun","getFullYear","bulan","getMonth","tanggal","getDate","hari","getDay","jam","getHours","menit","getMinutes","detik","getSeconds","changeCountry","slug","firstDate","lastDate","interval","getData","all","from","toISOString","getTime","dayBefore","setDate","useEffect","provinsi","Kasus_Meni","Kasus_Posi","Kasus_Semb","jml","renderTableData","address","phone","region","positif","sembuh","meninggal","Province","province","setProvince","curHospital","setCurHospital","setLoading","isIndo","setIndo","RSLoading","setRSLoading","fetchData","prov","fetchedProvinces","sortData","changeProvince","fetchedDataProvince","provs","curProv","fetchedDataHospital","hospital","toLowerCase","includes","DataP","StatusP","DataRS","Tentang","Contributors","contributor","image","link","About","contributors","setContributors","loading","getDev","fetchedContributors","contributorsData","fetch","url","json","avatar_url","html_url","highchartsMap","Highcharts","Map","datasetMerah","datasetOranye","datasetKuning","datasetHijau","window","proj4","animation","title","useHTML","credits","mapNavigation","tooltip","headerFormat","pointFormat","mapData","mapDataID","borderColor","nullColor","showInLegend","cursor","rules","condition","maxWidth","chartOptions","legend","highcharts","constructorType","TextField","styled","input","ClearButton","button","FilterComponent","filterText","onFilter","onClear","aria-label","ZoneTable","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","filter","item","kota","subHeaderComponenetMemo","useMemo","target","columns","selector","sortable","pagination","paginationResetDefaultPage","paginationComponentOptions","rowsPerPageText","subHeader","subHeaderComponent","conditionalRowStyles","when","row","RiskPieChart","zoneColor","breakpoint","Zone","Routes","component","setIsLoading","dataMerah","setDataMerah","dataOranye","setDataOranye","dataKuning","setDataKuning","dataHijau","setDataHijau","fetchMapData","dataset","nilai","z","keyword","lat","parseFloat","latitude","lon","longitude","dataWarna","App","Fragment","routes","route","idx","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b2c8038.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/covid.fdf34ada.svg\";","import \"./Menu.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nfunction Menu() {\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" md=\"3\" className=\"mb-4\">\n          <Link to=\"country\" className=\"HomeMenu\">\n            Lihat Status Negara\n          </Link>\n        </Col>\n        <Col xs=\"12\" md=\"3\" className=\"mb-4\">\n          <Link to=\"province\" className=\"HomeMenu\">\n            Lihat Status Provinsi\n          </Link>\n        </Col>\n        <Col xs=\"12\" md=\"3\" className=\"mb-4\">\n          <Link to=\"zona\" className=\"HomeMenu\">\n            Lihat Status Zona\n          </Link>\n        </Col>\n        <Col xs=\"12\" md=\"3\" className=\"mb-4\">\n          <Link to=\"about\" className=\"HomeMenu\">\n            Tentang Kami\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default withRouter(Menu);\n","import \"./Home.css\";\nimport logo from \"../../../logo/covid.svg\";\nimport Navbar from \"../../../navigation/home/Menu\";\n\nfunction Home() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo m-5\" alt=\"logo\" />\n        <Navbar />\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import \"./Footer.css\";\n\nfunction Footer(props) {\n  let addedStyle = props.loc\n    ? { color: \"#eee\", position: \"fixed\" }\n    : { color: \"black\", backgroundColor: \"white\", position: \"relative\" };\n  return (\n    <div className=\"footer\" style={addedStyle}>\n      <p>Built with &hearts; | Copyright &copy; Covid-19 Tracker 2020</p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import \"./Home.css\";\nimport Header from \"../../components/layout/header/home/Home\";\nimport Footer from \"../../components/layout/footer/Footer\";\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <Header />\n      <Footer loc />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport \"./Menu.css\";\nimport logo from \"../../logo/covid.svg\";\nimport { NavLink as Link, useLocation } from \"react-router-dom\";\nimport {\n  Nav,\n  Navbar,\n  NavLink,\n  NavbarBrand,\n  Collapse,\n  NavbarToggler,\n} from \"reactstrap\";\n\nfunction Menu() {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const location = useLocation();\n  let navbar = [\n    {\n      key: \"country\",\n      path: \"/country\",\n      menu: \"Negara\",\n      style:\n        location.pathname === \"/country\"\n          ? { color: \"#eee\" }\n          : { color: \"#81b3d2\" },\n    },\n    {\n      key: \"province\",\n      path: \"/province\",\n      menu: \"Provinsi\",\n      style:\n        location.pathname === \"/province\"\n          ? { color: \"#eee\" }\n          : { color: \"#81b3d2\" },\n    },\n    {\n      key: \"zona\",\n      path: \"/zona\",\n      menu: \"Zona\",\n      style:\n        location.pathname === \"/zona\"\n          ? { color: \"#eee\" }\n          : { color: \"#81b3d2\" },\n    },\n    {\n      key: \"about\",\n      path: \"/about\",\n      menu: \"Tentang Kami\",\n      style:\n        location.pathname === \"/about\"\n          ? { color: \"#eee\" }\n          : { color: \"#81b3d2\" },\n    },\n  ];\n  const navBar = navbar.map((curr) => {\n    return (\n      <NavLink\n        key={curr.key}\n        className=\"ml-5 p-2 mb-2 HomeMenu\"\n        to={curr.path}\n        tag={Link}\n        style={curr.style}\n      >\n        {curr.menu}\n      </NavLink>\n    );\n  });\n  return (\n    <Navbar className=\"nav\" dark expand=\"md\">\n      <NavbarBrand href=\"/\" to=\"/\" tag={Link} className=\"p-2\">\n        <img src={logo} alt=\"logo\" className=\"img-fluid\" width=\"50%\" />\n      </NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n          {navBar}\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n}\n\nexport default Menu;\n","import Navbar from \"../../../navigation/pages/Menu\";\n\nfunction Page() {\n  return (\n    <>\n      <Navbar />\n    </>\n  );\n}\n\nexport default Page;\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nfunction DropdownCustom({ placeholder, data, onChange }) {\n  const [selected, setSelected] = useState(placeholder);\n  const dataSource = [];\n  if (placeholder === \"Dunia\") {\n    dataSource.push({\n      key: \"WL\",\n      value: \"world\",\n      text: \"Dunia\",\n    });\n    for (let i in data) {\n      dataSource.push({\n        key: data[i].CountryCode,\n        value: data[i].Slug,\n        text: data[i].Country,\n      });\n    }\n  } else if (placeholder === \"Indonesia\") {\n    for (let i in data) {\n      dataSource.push({\n        key: data[i].Kode_Provi,\n        value: data[i].Provinsi,\n        text: data[i].Provinsi,\n      });\n    }\n  } else {\n    console.log(\"dropdown error\");\n  }\n  return (\n    <div className=\"mt-5 text-center\">\n      <Dropdown\n        placeholder={placeholder}\n        defaultValue={selected}\n        search\n        selection\n        options={dataSource}\n        onChange={(e, { value }) => {\n          let selectedCountry;\n          dataSource.some(function (element) {\n            selectedCountry = element.text;\n            return element.value === { value }.value;\n          });\n          setSelected(selectedCountry);\n          onChange({ value }.value, selectedCountry);\n        }}\n        className=\"border border-secondary\"\n      />\n    </div>\n  );\n}\n\nexport default DropdownCustom;\n","import { Col, Container, Row } from \"reactstrap\";\nimport ReactLoading from \"react-loading\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\n\nfunction DateFilter({\n  country,\n  isLoading,\n  onChange,\n  selectedDate,\n  minDate,\n  maxDate,\n  isWorld,\n}) {\n  if (isWorld) {\n    return <div></div>;\n  }\n  if (isLoading) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <ReactLoading\n          type={\"spinningBubbles\"}\n          color={\"#2d6187\"}\n          height={\"10%\"}\n          width={\"10%\"}\n          className=\"mt-3 p-5\"\n        />\n      </div>\n    );\n  }\n  return (\n    <Container className=\"mt-3\" fluid>\n      Total kasus covid-19 di {country} antara tanggal:\n      <Row className=\"justify-content-center mt-3\">\n        <Col sm={5}>\n          <DateRangePicker\n            locale=\"id\"\n            onChange={onChange}\n            value={selectedDate}\n            minDate={minDate}\n            maxDate={maxDate}\n            clearIcon={null}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default DateFilter;\n","import \"./Status.css\";\nimport React, { useState } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport CountUp from \"react-countup\";\nimport ReactLoading from \"react-loading\";\n\nfunction Status({ isLoading, isWorld, same, data, lastUpdate }) {\n  const [duration] = useState(2.5);\n  if (isLoading) {\n    return (\n      <>\n        <div className=\"d-flex justify-content-center\">\n          <ReactLoading\n            type={\"spinningBubbles\"}\n            color={\"#2d6187\"}\n            height={\"10%\"}\n            width={\"10%\"}\n            className=\"mt-3 p-5\"\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <h5>Tunggu Sebentar, Sedang Mengambil Data 😁 ✌️</h5>\n        </div>\n      </>\n    );\n  }\n  let confirmed;\n  let active;\n  let recovered;\n  let deaths;\n  if (isWorld) {\n    if (!data) {\n      return (\n        <div className=\"mt-3 p-5\">\n          Maaf, gagal mengambil semua data. Silahkan coba sesaat lagi atau\n          mengganti dengan fitur lain\n        </div>\n      );\n    }\n    confirmed = data.TotalConfirmed;\n    recovered = data.TotalRecovered;\n    deaths = data.TotalDeaths;\n  } else {\n    if (data.length === 0) {\n      return (\n        <div className=\"mt-3 p-5\">\n          Maaf, gagal mengambil data. Silahkan coba sesaat lagi atau mengganti\n          dengan negara lain\n        </div>\n      );\n    }\n    if (same) {\n      confirmed = data[data.length - 1].Confirmed;\n      active = data[data.length - 1].Active;\n      recovered = data[data.length - 1].Recovered;\n      deaths = data[data.length - 1].Deaths;\n    } else {\n      confirmed = Math.abs(data[data.length - 1].Confirmed - data[0].Confirmed);\n      active = Math.abs(data[data.length - 1].Active - data[0].Active);\n      recovered = Math.abs(data[data.length - 1].Recovered - data[0].Recovered);\n      deaths = Math.abs(data[data.length - 1].Deaths - data[0].Deaths);\n    }\n  }\n  const formatValue = (value) => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n  return (\n    <Container fluid>\n      {isWorld ? (\n        <div className=\"mt-3\">Total kasus covid-19 di Dunia saat ini</div>\n      ) : (\n        <></>\n      )}\n      <Row className=\"justify-content-center p-4\">\n        <Col md={isWorld ? 3 : 2} sm={12} className=\"mb-3\">\n          <Row className=\"justify-content-center color-nav-up p-4 rounded-top font\">\n            <CountUp\n              end={confirmed}\n              duration={duration}\n              formattingFn={formatValue}\n            />\n            {isWorld ? (\n              <></>\n            ) : (\n              <>&nbsp; &nbsp; ({confirmed === 0 ? 0 : 100}%)</>\n            )}\n          </Row>\n          <Row className=\"justify-content-center color-nav-down text-white p-4 bg-nav rounded-bottom font font-bold\">\n            Kasus Terkonfirmasi\n          </Row>\n        </Col>\n        {!isWorld ? (\n          <>\n            <Col md={1}></Col>\n            <Col md={2} sm={12} className=\"mb-3\">\n              <Row className=\"justify-content-center border-top border-left border-right border-primary text-primary p-4 rounded-top font\">\n                <CountUp\n                  end={active}\n                  duration={duration}\n                  formattingFn={formatValue}\n                />\n                {isWorld ? (\n                  <></>\n                ) : (\n                  <>\n                    &nbsp; &nbsp; (\n                    {confirmed === 0\n                      ? 0\n                      : ((active / confirmed) * 100).toFixed(2)}\n                    %)\n                  </>\n                )}\n              </Row>\n              <Row className=\"justify-content-center border-bottom border-left border-right border-primary text-white p-4 bg-primary rounded-bottom font font-bold\">\n                Kasus Aktif\n              </Row>\n            </Col>\n          </>\n        ) : (\n          <></>\n        )}\n        <Col md={1}></Col>\n        <Col md={isWorld ? 3 : 2} sm={12} className=\"mb-3\">\n          <Row className=\"justify-content-center border-top border-left border-right border-success text-success p-4 rounded-top font\">\n            <CountUp\n              end={recovered}\n              duration={duration}\n              formattingFn={formatValue}\n            />\n            {isWorld ? (\n              <></>\n            ) : (\n              <>\n                &nbsp; &nbsp; (\n                {confirmed === 0\n                  ? 0\n                  : ((recovered / confirmed) * 100).toFixed(2)}\n                %)\n              </>\n            )}\n          </Row>\n          <Row className=\"justify-content-center border-bottom border-left border-right border-success text-white p-4 bg-success rounded-bottom font font-bold\">\n            Kasus Sembuh\n          </Row>\n        </Col>\n        <Col md={1}></Col>\n        <Col md={isWorld ? 3 : 2} sm={12} className=\"mb-3\">\n          <Row className=\"justify-content-center border-top border-left border-right border-secondary text-secondary p-4 rounded-top font\">\n            <CountUp\n              end={deaths}\n              duration={duration}\n              formattingFn={formatValue}\n            />\n            {isWorld ? (\n              <></>\n            ) : (\n              <>\n                &nbsp; &nbsp; (\n                {confirmed === 0 ? 0 : ((deaths / confirmed) * 100).toFixed(2)}\n                %)\n              </>\n            )}\n          </Row>\n          <Row className=\"justify-content-center border-bottom border-left border-right border-secondary text-white p-4 bg-secondary rounded-bottom font font-bold\">\n            Kasus Meninggal\n          </Row>\n        </Col>\n      </Row>\n      Terakhir diperbaharui {lastUpdate}\n    </Container>\n  );\n}\n\nexport default Status;\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"https://api.covid19api.com/\"\n});","import API from \"./index\";\nimport axios from \"axios\";\n\nexport const getSummaryData = async () => {\n  try {\n    const response = await API.get(\"summary\");\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getCountriesData = async (country, start, end) => {\n  const response = await API.get(\n    \"country/\" + country + \"?from=\" + start + \"&to=\" + end\n  ).catch((err) => {\n    return [];\n  });\n  return response.data;\n};\n\nexport const getProvinces = async () => {\n  try {\n    const response = await axios.get(\n      \"https://services5.arcgis.com/VS6HdKS0VfIhv8Ct/arcgis/rest/services/COVID19_Indonesia_per_Provinsi/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\"\n    );\n    var reconstruct_response = [];\n    for (let data in response.data.features) {\n      var temp = response.data.features[data].attributes;\n      temp.geometry = response.data.features[data].geometry;\n      reconstruct_response.push(temp);\n    }\n    return reconstruct_response;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst serverless =\n  \"https://serverless-covid19-indonesia-api.liondy.vercel.app/api/\";\nexport const getProvinceHospital = async () => {\n  try {\n    const response = await axios.get(serverless + \"hospital\");\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getZonaIndonesia = async () => {\n  try {\n    const response = await axios.get(serverless + \"zona-indonesia\");\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getContributors = async () => {\n  try {\n    const response = await axios.get(\n      \"https://api.github.com/repos/liondy/covid19-tracker-website/contributors\"\n    );\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getPopulation = async () => {\n  try {\n    const response = await axios.get(serverless + \"population\");\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport ReactLoading from \"react-loading\";\n\nfunction GraphStatus({ isLoading, data, curCountry }) {\n  if (isLoading) {\n    return (\n      <>\n        <div className=\"d-flex justify-content-center\">\n          <ReactLoading\n            type={\"spinningBubbles\"}\n            color={\"#2d6187\"}\n            height={\"10%\"}\n            width={\"10%\"}\n            className=\"mt-3 p-5\"\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <h5>Memuat Grafik...</h5>\n        </div>\n      </>\n    );\n  }\n  let xData = [];\n  let activeData = [];\n  let recoverData = [];\n  let deathData = [];\n  data.forEach((dataElement) => {\n    let curDate = new Date(dataElement.Date).toLocaleString().split(\",\")[0];\n    xData.push(curDate);\n    activeData.push(dataElement.Active);\n    recoverData.push(dataElement.Recovered);\n    deathData.push(dataElement.Deaths);\n  });\n  let yActiveData = [\n    {\n      name: \"aktif\",\n      data: activeData,\n    },\n  ];\n  let yRecoverData = [\n    {\n      name: \"sembuh\",\n      data: recoverData,\n    },\n  ];\n  let yDeathsData = [\n    {\n      name: \"meninggal\",\n      data: deathData,\n    },\n  ];\n  let optionsActive = {\n    chart: {\n      id: \"aktif\",\n      group: \"negara\",\n      type: \"line\",\n      height: 160,\n      zoom: {\n        type: \"x\",\n        enabled: true,\n        autoScaleYaxis: true,\n      },\n      animations: {\n        enabled: true,\n        easing: \"easeinout\",\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150,\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350,\n        },\n      },\n    },\n    colors: [\"#008FFB\"],\n    yaxis: {\n      labels: {\n        minWidth: 40,\n      },\n    },\n    xaxis: {\n      categories: xData,\n      type: \"datetime\",\n    },\n  };\n  let optionsRecovered = {\n    chart: {\n      id: \"sembuh\",\n      group: \"negara\",\n      type: \"line\",\n      height: 160,\n      zoom: {\n        type: \"x\",\n        enabled: true,\n        autoScaleYaxis: true,\n      },\n      animations: {\n        enabled: true,\n        easing: \"easeinout\",\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150,\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350,\n        },\n      },\n    },\n    colors: [\"#00E396\"],\n    yaxis: {\n      labels: {\n        minWidth: 40,\n      },\n    },\n    xaxis: {\n      categories: xData,\n      type: \"datetime\",\n    },\n  };\n  let optionsDeaths = {\n    chart: {\n      id: \"meninggal\",\n      group: \"negara\",\n      type: \"line\",\n      height: 160,\n      zoom: {\n        type: \"x\",\n        enabled: true,\n        autoScaleYaxis: true,\n      },\n      animations: {\n        enabled: true,\n        easing: \"easeinout\",\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150,\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350,\n        },\n      },\n    },\n    colors: [\"#546E7A\"],\n    yaxis: {\n      labels: {\n        minWidth: 40,\n      },\n    },\n    xaxis: {\n      categories: xData,\n      type: \"datetime\",\n    },\n  };\n  return (\n    <div className=\"p-5\">\n      <h2>Grafik Kasus Covid-19 Aktif di {curCountry}</h2>\n      <Chart\n        options={optionsActive}\n        series={yActiveData}\n        type=\"line\"\n        height={160}\n      />\n      <h2>Grafik Kasus Kesembuhan dari Covid-19 di {curCountry}</h2>\n      <Chart\n        options={optionsRecovered}\n        series={yRecoverData}\n        type=\"line\"\n        height={160}\n      />\n      <h2>Grafik Kasus Kematian akibat Covid-19 di {curCountry}</h2>\n      <Chart\n        options={optionsDeaths}\n        series={yDeathsData}\n        type=\"line\"\n        height={160}\n      />\n    </div>\n  );\n}\n\nexport default GraphStatus;\n","import React from \"react\";\nimport { Table } from \"reactstrap\";\n\nfunction Data({ data, status }) {\n  const renderTableData = () => {\n    if (status === \"confirmed\") {\n      return data.map((negara, index) => {\n        const {\n          Country,\n          TotalConfirmed,\n          Population,\n          ConfirmedPercentage,\n        } = negara; //destructuring\n        return (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{Country}</td>\n            <td>\n              {TotalConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\n            </td>\n            <td>\n              {Population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\n            </td>\n            <td>{ConfirmedPercentage.toFixed(2).replace(\".\", \",\")}%</td>\n            <td>\n              {ConfirmedPercentage.toFixed(2).replace(\".\", \",\") > 70\n                ? \"Ya\"\n                : \"Belum\"}\n            </td>\n          </tr>\n        );\n      });\n    } else if (status === \"recovered\") {\n      return data.map((negara, index) => {\n        const {\n          Country,\n          TotalConfirmed,\n          TotalRecovered,\n          RecoveredPercentage,\n        } = negara; //destructuring\n        return (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{Country}</td>\n            <td>\n              {TotalConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\n            </td>\n            <td>\n              {TotalRecovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\n            </td>\n            <td> {RecoveredPercentage.toFixed(2).replace(\".\", \",\")}% </td>\n          </tr>\n        );\n      });\n    } else if (status === \"deaths\") {\n      return data.map((negara, index) => {\n        const {\n          Country,\n          TotalConfirmed,\n          TotalDeaths,\n          DeathPercentage,\n        } = negara; //destructuring\n        return (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{Country}</td>\n            <td>\n              {TotalConfirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\n            </td>\n            <td>\n              {TotalDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\n            </td>\n            <td> {DeathPercentage.toFixed(2).replace(\".\", \",\")}% </td>\n          </tr>\n        );\n      });\n    }\n  };\n  return (\n    <Table hover responsive>\n      <thead>\n        <tr>\n          <th>No.</th>\n          <th>Negara</th>\n          <th>Total Konfirmasi</th>\n          {status === \"confirmed\" ? (\n            <>\n              <th>Jumlah Populasi</th>\n              <th>% dari Populasi</th>\n              <th>Herd Immunity?</th>\n            </>\n          ) : (\n            <></>\n          )}\n          {status === \"recovered\" ? (\n            <>\n              <th>Total Sembuh</th>\n              <th>% dari Total Sembuh</th>\n            </>\n          ) : (\n            <></>\n          )}\n          {status === \"deaths\" ? (\n            <>\n              <th>Total Meninggal</th>\n              <th>% dari Total Meninggal</th>\n            </>\n          ) : (\n            <></>\n          )}\n        </tr>\n      </thead>\n      <tbody>{renderTableData()}</tbody>\n    </Table>\n  );\n}\n\nexport default Data;\n","import React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport {\n  Col,\n  Button,\n  Row,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nimport Data from \"../tables/Data\";\nimport ReactLoading from \"react-loading\";\n\nfunction TopWorldGraph({\n  isLoading,\n  sortedConfirmedCountry,\n  sortedRecoveredCountry,\n  sortedDeathsCountry,\n}) {\n  const [modalConfirmed, setModalConfirmed] = useState(false);\n  const [modalRecovered, setModalRecovered] = useState(false);\n  const [modalDeath, setModalDeath] = useState(false);\n  if (isLoading) {\n    return (\n      <>\n        <div className=\"d-flex justify-content-center\">\n          <ReactLoading\n            type={\"spinningBubbles\"}\n            color={\"#2d6187\"}\n            height={\"10%\"}\n            width={\"10%\"}\n            className=\"mt-3 p-5\"\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <h5>Memuat Grafik</h5>\n        </div>\n      </>\n    );\n  }\n  let XconfirmedData = [];\n  let XrecoveredData = [];\n  let XdeathData = [];\n  let YconfirmedData = [];\n  let YrecoverData = [];\n  let YdeathData = [];\n  if (sortedConfirmedCountry.length !== 0) {\n    let confirmedData = sortedConfirmedCountry.slice(0, 10);\n    let recoverData = sortedRecoveredCountry.slice(0, 10);\n    let deathData = sortedDeathsCountry.slice(0, 10);\n    for (let i = 0; i < 10; i++) {\n      XconfirmedData.push(confirmedData[i].Country);\n      XrecoveredData.push(recoverData[i].Country);\n      XdeathData.push(deathData[i].Country);\n      YconfirmedData.push(confirmedData[i].ConfirmedPercentage);\n      YrecoverData.push(recoverData[i].RecoveredPercentage);\n      YdeathData.push(deathData[i].DeathPercentage);\n    }\n  }\n  let yConfirmedData = [\n    {\n      name: \"konfirmasi\",\n      data: YconfirmedData,\n    },\n  ];\n  let yRecoverData = [\n    {\n      name: \"sembuh\",\n      data: YrecoverData,\n    },\n  ];\n  let yDeathsData = [\n    {\n      name: \"meninggal\",\n      data: YdeathData,\n    },\n  ];\n  let optionsConfirmed = {\n    chart: {\n      id: \"konfirmasi\",\n      type: \"bar\",\n      height: 350,\n      chart: {\n        animations: {\n          enabled: true,\n          easing: \"easeinout\",\n          speed: 800,\n          animateGradually: {\n            enabled: true,\n            delay: 150,\n          },\n          dynamicAnimation: {\n            enabled: true,\n            speed: 350,\n          },\n        },\n      },\n    },\n    colors: [\"#008FFB\"],\n    yaxis: {\n      labels: {\n        minWidth: 40,\n        formatter: function (val, opts) {\n          return val.toFixed(2).toString().replace(\".\", \",\") + \"%\";\n        },\n      },\n    },\n    xaxis: {\n      categories: XconfirmedData,\n    },\n    dataLabels: {\n      formatter: function (val, opts) {\n        return val.toFixed(2).toString().replace(\".\", \",\") + \"%\";\n      },\n    },\n  };\n  let optionsRecovered = {\n    chart: {\n      id: \"sembuh\",\n      type: \"bar\",\n      height: 350,\n      chart: {\n        animations: {\n          enabled: true,\n          easing: \"easeinout\",\n          speed: 800,\n          animateGradually: {\n            enabled: true,\n            delay: 150,\n          },\n          dynamicAnimation: {\n            enabled: true,\n            speed: 350,\n          },\n        },\n      },\n    },\n    colors: [\"#00E396\"],\n    yaxis: {\n      floating: true,\n      min: 0,\n      max: 100,\n      labels: {\n        minWidth: 40,\n        formatter: (value) => {\n          return value + \"%\";\n        },\n      },\n    },\n    xaxis: {\n      categories: XrecoveredData,\n    },\n    dataLabels: {\n      formatter: function (val, opts) {\n        return val.toFixed(2).toString().replace(\".\", \",\") + \"%\";\n      },\n    },\n  };\n  let optionsDeaths = {\n    chart: {\n      id: \"meninggal\",\n      type: \"bar\",\n      height: 350,\n      chart: {\n        animations: {\n          enabled: true,\n          easing: \"easeinout\",\n          speed: 800,\n          animateGradually: {\n            enabled: true,\n            delay: 150,\n          },\n          dynamicAnimation: {\n            enabled: true,\n            speed: 350,\n          },\n        },\n      },\n    },\n    colors: [\"#546E7A\"],\n    yaxis: {\n      floating: true,\n      labels: {\n        minWidth: 40,\n        formatter: (value) => {\n          return value + \"%\";\n        },\n      },\n    },\n    xaxis: {\n      categories: XdeathData,\n    },\n    dataLabels: {\n      formatter: function (val, opts) {\n        return val.toFixed(2).toString().replace(\".\", \",\") + \"%\";\n      },\n    },\n  };\n  const toggleConfirmed = () => {\n    setModalConfirmed(!modalConfirmed);\n  };\n  const toggleRecovered = () => {\n    setModalRecovered(!modalRecovered);\n  };\n  const toggleDeath = () => {\n    setModalDeath(!modalDeath);\n  };\n  return (\n    <div className=\"p-5\">\n      <Row className=\"mb-3\">\n        <Col md={10} sm={12}>\n          <h2>Negara dengan Kasus Persentase dari Populasi Terbanyak</h2>\n        </Col>\n        <Col md={2} sm={12}>\n          <Button\n            color=\"primary\"\n            onClick={toggleConfirmed}\n            className=\"float-right\"\n          >\n            Lihat Semua Urutan\n          </Button>\n          <Modal\n            isOpen={modalConfirmed}\n            toggle={toggleConfirmed}\n            className=\"modal-lg\"\n          >\n            <ModalHeader toggle={toggleConfirmed} charCode=\"X\">\n              <p>Urutan Kasus Persentase dari Populasi Seluruh Negara</p>\n            </ModalHeader>\n            <ModalBody>\n              <Data data={sortedConfirmedCountry} status=\"confirmed\" />\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggleConfirmed}>\n                Tutup\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chart\n            options={optionsConfirmed}\n            series={yConfirmedData}\n            type=\"bar\"\n            height={350}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col md={10} sm={12}>\n          <h2>Negara dengan Persentase Tingkat Kesembuhan Tertinggi</h2>\n        </Col>\n        <Col md={2} sm={12}>\n          <Button\n            color=\"primary\"\n            onClick={toggleRecovered}\n            className=\"float-right\"\n          >\n            Lihat Semua Urutan\n          </Button>\n          <Modal isOpen={modalRecovered} toggle={toggleRecovered}>\n            <ModalHeader toggle={toggleRecovered} charCode=\"X\">\n              <p>Urutan Persentase Tingkat Kesembuhan Seluruh Negara</p>\n            </ModalHeader>\n            <ModalBody>\n              <Data data={sortedRecoveredCountry} status=\"recovered\" />\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggleRecovered}>\n                Tutup\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chart\n            options={optionsRecovered}\n            series={yRecoverData}\n            type=\"bar\"\n            height={350}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col md={10} sm={12}>\n          <h2>Negara dengan Persentase Tingkat Kematian Tertinggi</h2>\n        </Col>\n        <Col md={2} sm={12}>\n          <Button color=\"primary\" onClick={toggleDeath} className=\"float-right\">\n            Lihat Semua Urutan\n          </Button>\n          <Modal isOpen={modalDeath} toggle={toggleDeath}>\n            <ModalHeader toggle={toggleDeath} charCode=\"X\">\n              <p>Urutan Persentase Tingkat Kematian Seluruh Negara</p>\n            </ModalHeader>\n            <ModalBody>\n              <Data data={sortedDeathsCountry} status=\"deaths\" />\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggleDeath}>\n                Tutup\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chart\n            options={optionsDeaths}\n            series={yDeathsData}\n            type=\"bar\"\n            height={350}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default TopWorldGraph;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../../components/layout/header/pages/Pages\";\nimport Footer from \"../../components/layout/footer/Footer\";\nimport CountryPicker from \"../../components/dropdowns/DropdownCustom\";\nimport DateFilter from \"../../components/RangeFilter/DateFilter\";\nimport Status from \"../../components/data-status/Status\";\nimport { getSummaryData, getCountriesData, getPopulation } from \"../../api/Api\";\nimport GraphStatus from \"../../components/graphs/GraphStatus\";\nimport TopWorldGraph from \"../../components/graphs/TopWorldGraph\";\n\nfunction Country() {\n  const [curSlug, setCurSlug] = useState();\n  const [curCountry, setCurCountry] = useState();\n  const [summaryData, setSummaryData] = useState({});\n  const [lastUpdate, setLastUpdate] = useState();\n  const [countries, setCountries] = useState([]);\n  const [dateInterval, setInterval] = useState([]);\n  const [selectedDate, setSelectedDate] = useState([]);\n  const [sortedConfirmedCountry, setConfirmedSorted] = useState([]);\n  const [sortedRecoveredCountry, setRecoveredSorted] = useState([]);\n  const [sortedDeathsCountry, setDeathsSorted] = useState([]);\n  const [same, setSame] = useState(true);\n  const [data, setData] = useState([]);\n  const [world, setWorld] = useState(true);\n  const [isLoadingDate, setLoadingDate] = useState(true);\n  const [isLoadingData, setLoadingData] = useState(true);\n  let days = [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"];\n  let months = [\n    \"Januari\",\n    \"Februari\",\n    \"Maret\",\n    \"April\",\n    \"Mei\",\n    \"Juni\",\n    \"Juli\",\n    \"Agustus\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Desember\",\n  ];\n  const fetchSummaryData = async () => {\n    const fetchedData = await getSummaryData();\n    const fetchedPop = await getPopulation();\n    if (fetchedData.Global === undefined) {\n      setData({});\n      setLoadingData(false);\n      return (\n        <div className=\"mt-3 p-5\">\n          Maaf, gagal mengambil semua data. Silahkan coba sesaat lagi atau\n          mengganti dengan fitur lain\n        </div>\n      );\n    } else {\n      setData(fetchedData.Global);\n      setCountries(fetchedData.Countries);\n      setSummaryData(fetchedData);\n      setWorld(true);\n      setUpdated(fetchedData.Date);\n      sortCountry([...fetchedData.Countries], [...fetchedPop]);\n      setLoadingData(false);\n    }\n  };\n  const sortCountry = (countries, populations) => {\n    let newCountries = countPercentage([...countries], [...populations]);\n    let sortByConfirmed = [...newCountries];\n    sortByConfirmed.sort(sortCountryBasedOn(\"ConfirmedPercentage\"));\n    setConfirmedSorted(sortByConfirmed);\n    let sortByRecovered = [...newCountries];\n    sortByRecovered.sort(sortCountryBasedOn(\"RecoveredPercentage\"));\n    setRecoveredSorted(sortByRecovered);\n    let sortByDeaths = [...newCountries];\n    sortByDeaths.sort(sortCountryBasedOn(\"DeathPercentage\"));\n    setDeathsSorted(sortByDeaths);\n  };\n  const countPercentage = (countries, populations) => {\n    let countriesToBeSet = [...countries];\n    for (let i = 0; i < countriesToBeSet.length; i++) {\n      if (countriesToBeSet[i].TotalConfirmed === 0) {\n        countriesToBeSet[i].RecoveredPercentage = 0.0;\n        countriesToBeSet[i].DeathPercentage = 0.0;\n      } else {\n        countriesToBeSet[i].ConfirmedPercentage =\n          (countriesToBeSet[i].TotalConfirmed / populations[i].Population) *\n          100;\n        countriesToBeSet[i].RecoveredPercentage =\n          (countriesToBeSet[i].TotalRecovered /\n            countriesToBeSet[i].TotalConfirmed) *\n          100;\n        countriesToBeSet[i].DeathPercentage =\n          (countriesToBeSet[i].TotalDeaths /\n            countriesToBeSet[i].TotalConfirmed) *\n          100;\n      }\n      countriesToBeSet[i].Population = populations[i].Population;\n    }\n    return countriesToBeSet;\n  };\n  const sortCountryBasedOn = (property) => {\n    return function (a, b) {\n      if (a[property] < b[property]) return 1;\n      else if (a[property] > b[property]) return -1;\n      return 0;\n    };\n  };\n  const setUpdated = (tanggalUpdate) => {\n    let date = new Date(tanggalUpdate);\n    let tahun = date.getFullYear();\n    let bulan = date.getMonth();\n    let tanggal = date.getDate();\n    tanggal = tanggal < 10 ? \"0\" + tanggal : tanggal;\n    let hari = date.getDay();\n    let jam = date.getHours();\n    jam = jam < 10 ? \"0\" + jam : jam;\n    let menit = date.getMinutes();\n    menit = menit < 10 ? \"0\" + menit : menit;\n    let detik = date.getSeconds();\n    detik = detik < 10 ? \"0\" + detik : detik;\n    let updated =\n      days[hari] +\n      \", \" +\n      tanggal +\n      \" \" +\n      months[bulan] +\n      \" \" +\n      tahun +\n      \" \" +\n      jam +\n      \":\" +\n      menit +\n      \":\" +\n      detik;\n    setLastUpdate(updated);\n  };\n  const changeCountry = async (slug, country) => {\n    setLoadingDate(true);\n    setLoadingData(true);\n    if (slug !== \"world\") {\n      setWorld(false);\n      setCurSlug(slug);\n      setCurCountry(country);\n      const fetchedData = await getCountriesData(slug);\n      if (fetchedData === undefined) {\n        setData([]);\n        setLoadingData(false);\n      } else {\n        countries.forEach((negara) => {\n          if (negara.Slug === slug) {\n            setUpdated(negara.Date);\n          }\n        });\n        let all = true;\n        let firstDate = new Date(fetchedData[0].Date);\n        let lastDate = new Date(fetchedData[fetchedData.length - 1].Date);\n        let interval = [];\n        interval.push(firstDate);\n        interval.push(lastDate);\n        setSelectedDate(interval);\n        setInterval(interval);\n        getData(slug, firstDate, lastDate, all);\n      }\n    } else {\n      setWorld(true);\n      setData(summaryData.Global);\n      setUpdated(summaryData.Date);\n      setLoadingData(false);\n    }\n    setLoadingDate(false);\n  };\n  const changeDate = (date) => {\n    setSelectedDate(date);\n    getData(curSlug, date[0], date[1]);\n  };\n  const getData = async (slug, firstDate, lastDate, all = false) => {\n    setLoadingData(true);\n    setSame(true);\n    let from;\n    if (all) {\n      from = firstDate.toISOString().split(\".\")[0] + \"Z\";\n    } else {\n      if (firstDate.getTime() !== dateInterval[0].getTime()) {\n        setSame(false);\n        let dayBefore = new Date(firstDate);\n        dayBefore.setDate(firstDate.getDate() - 1);\n        from = dayBefore.toISOString().split(\".\")[0] + \"Z\";\n      } else {\n        from = firstDate.toISOString().split(\".\")[0] + \"Z\";\n      }\n    }\n    let to = lastDate.toISOString().split(\".\")[0] + \"Z\";\n    const fetchedData = await getCountriesData(slug, from, to);\n    setData(fetchedData);\n    setLoadingData(false);\n  };\n  useEffect(() => {\n    fetchSummaryData();\n  }, []);\n  return (\n    <div>\n      <Header />\n      <div className=\"text-center\">\n        <CountryPicker\n          placeholder=\"Dunia\"\n          data={countries}\n          onChange={changeCountry}\n        />\n        <DateFilter\n          country={curCountry}\n          isLoading={isLoadingDate}\n          onChange={changeDate}\n          selectedDate={selectedDate}\n          minDate={dateInterval[0]}\n          maxDate={dateInterval[1]}\n          isWorld={world}\n        />\n        <Status\n          isLoading={isLoadingData}\n          isWorld={world}\n          same={same}\n          data={data}\n          lastUpdate={lastUpdate}\n        />\n      </div>\n      <div>\n        {world ? (\n          <TopWorldGraph\n            isLoading={isLoadingData}\n            sortedConfirmedCountry={sortedConfirmedCountry}\n            sortedRecoveredCountry={sortedRecoveredCountry}\n            sortedDeathsCountry={sortedDeathsCountry}\n          />\n        ) : (\n          <GraphStatus\n            isLoading={isLoadingData}\n            data={data}\n            curCountry={curCountry}\n          />\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Country;\n","import React from \"react\";\nimport { Table } from \"reactstrap\";\n\nfunction Data({ data, status }) {\n  const renderTableData = () => {\n    if (!status) {\n      return data.map((provinsi, index) => {\n        const { Kasus_Meni, Kasus_Posi, Kasus_Semb, Provinsi } = provinsi;\n        var jml = Kasus_Semb + Kasus_Posi + Kasus_Meni;\n        return (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{Provinsi}</td>\n            <td>{jml}</td>\n            <td>{Kasus_Posi}</td>\n            <td>{Kasus_Semb}</td>\n            <td>{Kasus_Meni}</td>\n          </tr>\n        );\n      });\n    }\n  };\n  return (\n    <Table hover responsive>\n      <thead>\n        <tr>\n          <th>No.</th>\n          <th>Provinsi</th>\n          <th>Jumlah Kasus</th>\n          <th>Positif</th>\n          <th>Sembuh</th>\n          <th>Meninggal</th>\n        </tr>\n      </thead>\n      <tbody>{renderTableData()}</tbody>\n    </Table>\n  );\n}\nexport default Data;\n","import React from \"react\";\nimport { Table } from \"reactstrap\";\n\nfunction Data({ data, status }) {\n  const renderTableData = () => {\n    if (!status) {\n      return data.map((provinsi, index) => {\n        const { address, name, phone, region } = provinsi;\n        return (\n          <tr key={index}>\n            <td>{index + 1}</td>\n            <td>{name}</td>\n            <td>{address}</td>\n            <td>{phone}</td>\n            <td>{region}</td>\n          </tr>\n        );\n      });\n    }\n  };\n  return (\n    <Table hover responsive>\n      <thead>\n        <tr>\n          <th>No.</th>\n          <th>Nama RS</th>\n          <th>Alamat</th>\n          <th>No. telp</th>\n          <th>Kota/Kabupaten</th>\n        </tr>\n      </thead>\n      <tbody>{renderTableData()}</tbody>\n    </Table>\n  );\n}\nexport default Data;\n","import \"./Status.css\";\nimport React from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport ReactLoading from \"react-loading\";\n\nfunction Status({ data, isLoading }) {\n  if (isLoading) {\n    return (\n      <>\n        <div className=\"d-flex justify-content-center\">\n          <ReactLoading\n            type={\"spinningBubbles\"}\n            color={\"#2d6187\"}\n            height={\"10%\"}\n            width={\"10%\"}\n            className=\"mt-3 p-5\"\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <h5>Tunggu Sebentar, Sedang Mengambil Data 😁 ✌️</h5>\n        </div>\n      </>\n    );\n  }\n  let positif = data.Kasus_Posi;\n  let sembuh = data.Kasus_Semb;\n  let meninggal = data.Kasus_Meni;\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center p-4\">\n        <Col md={3} sm={12} className=\"mb-3\">\n          <Row className=\"justify-content-center color-nav-up p-4 rounded-top font\">\n            <>&nbsp; &nbsp; {positif}</>\n          </Row>\n          <Row className=\"justify-content-center color-nav-down text-white p-4 bg-nav rounded-bottom font font-bold\">\n            Kasus Positif\n          </Row>\n        </Col>\n        <Col md={1}></Col>\n        <Col md={3} sm={12} className=\"mb-3\">\n          <Row className=\"justify-content-center border-top border-left border-right border-primary text-primary p-4 rounded-top font\">\n            <>\n              {\" \"}\n              &nbsp; &nbsp; {sembuh} ({((sembuh / positif) * 100).toFixed(2)}%)\n            </>\n          </Row>\n          <Row className=\"justify-content-center border-bottom border-left border-right border-primary text-white p-4 bg-primary rounded-bottom font font-bold\">\n            Kasus Sembuh\n          </Row>\n        </Col>\n        <Col md={1}></Col>\n        <Col md={3} sm={12} className=\"mb-3\">\n          <Row className=\"justify-content-center border-top border-left border-right border-success text-success p-4 rounded-top font\">\n            <>\n              {\" \"}\n              &nbsp; &nbsp; {meninggal} (\n              {((meninggal / positif) * 100).toFixed(2)}%)\n            </>\n          </Row>\n          <Row className=\"justify-content-center border-bottom border-left border-right border-success text-white p-4 bg-success rounded-bottom font font-bold\">\n            Kasus Meninggal\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Status;\n","import \"./Province.css\";\nimport Header from \"../../components/layout/header/pages/Pages\";\nimport Footer from \"../../components/layout/footer/Footer\";\nimport { getProvinces, getProvinceHospital } from \"../../api/Api\";\nimport React, { useState, useEffect } from \"react\";\nimport DataP from \"../../components/tables/DataP\";\nimport DataRS from \"../../components/tables/DataRS\";\nimport Dropdown from \"../../components/dropdowns/DropdownCustom\";\nimport StatusP from \"../../components/data-status/StatusP\";\n\nfunction Province() {\n  const [province, setProvince] = useState([]);\n  const [data, setData] = useState([]);\n  const [curHospital, setCurHospital] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [isIndo, setIndo] = useState(true);\n  const [RSLoading, setRSLoading] = useState(true);\n\n  const fetchData = async () => {\n    setLoading(true);\n    const fetchedProvinces = await getProvinces();\n    fetchedProvinces.sort(sortData(\"Provinsi\"));\n\n    const temp = [];\n    for (let prov in fetchedProvinces) {\n      if (fetchedProvinces[prov].Provinsi !== \"Indonesia\") {\n        temp.push(fetchedProvinces[prov]);\n      }\n    }\n\n    setProvince(fetchedProvinces);\n    setData(temp);\n    setLoading(false);\n  };\n  const sortData = (property) => {\n    return function (a, b) {\n      if (a[property] > b[property]) return 1;\n      else if (a[property] < b[property]) return -1;\n      return 0;\n    };\n  };\n  const changeProvince = async (province) => {\n    setLoading(true);\n    const fetchedDataProvince = await getProvinces();\n    if (province === \"Indonesia\") {\n      setIndo(true);\n      let provs = [];\n      for (let prov in fetchedDataProvince) {\n        if (fetchedDataProvince[prov].Provinsi !== province) {\n          provs.push(fetchedDataProvince[prov]);\n        }\n      }\n      setData(provs);\n    } else {\n      setIndo(false);\n      let curProv = {};\n      for (let prov in fetchedDataProvince) {\n        if (fetchedDataProvince[prov].Provinsi === province) {\n          curProv = fetchedDataProvince[prov];\n          break;\n        }\n      }\n      setData(curProv);\n      setRSLoading(true);\n      const fetchedDataHospital = await getProvinceHospital();\n      const hospital = [];\n      for (let prov in fetchedDataHospital) {\n        if (\n          fetchedDataHospital[prov].region\n            .toLowerCase()\n            .includes(province.toLowerCase())\n        ) {\n          var temp = fetchedDataHospital[prov];\n          temp.province = province;\n          hospital.push(temp);\n        }\n      }\n      setCurHospital(hospital);\n      setRSLoading(false);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <Header />\n      <h3 className=\"text-center\">Pilih Provinsi Anda</h3>\n      <Dropdown\n        placeholder=\"Indonesia\"\n        data={province}\n        onChange={changeProvince}\n      />\n      {isIndo ? (\n        <div className=\"p-5\">\n          <DataP data={data} status={isLoading} />\n        </div>\n      ) : (\n        <div className=\"p-5\">\n          <StatusP isLoading={isLoading} data={data} />\n          <h2>Rumah Sakit Rujukan Pasien Covid-19</h2>\n          <DataRS data={curHospital} status={RSLoading} />\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Province;\n","import React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n\nconst Tentang = () => {\n  return (\n    <Container fluid>\n      <Row className=\"p-5\">\n        <h2>Tentang Covid-19 Tracker</h2>\n      </Row>\n      <Row className=\"ml-5 mr-5\">\n        <p className=\"text-justify\">\n          Maraknya pandemi Covid-19 di seluruh dunia membuat aktivitas\n          orang-orang menjadi terbatas. Hal ini membuat banyak orang yang sudah\n          tidak sabar akan kapan pandemi ini berakhir dan mencari cara untuk\n          memantau perkembangan virus Covid-19 secara real-time dari seluruh\n          dunia. Covid-19 Tracker memberikan grafik pemantauan perkembangan\n          covid-19 di seluruh dunia terutama di Indonesia. Visualisasi dibuat\n          publik agar orang-orang dapat terus memantau perkembangannya serta\n          melihat grafik apakah situasi dunia semakin aman atau tidak aman.\n        </p>\n        <p>\n          Data yang digunakan pada aplikasi ini diambil dari: <br />- Negara dan\n          Dunia: <a href=\"covid19api.com\">Covid 19 API</a> <br />- Provinsi:\n          <a href=\"https://bnpb-inacovid19.hub.arcgis.com/datasets/data-harian-kasus-per-provinsi-covid-19-indonesia/geoservice\">\n            BNPB Open Data\n          </a>\n          <br />- Rumah Sakit Rujukan:\n          <a href=\"https://dekontaminasi.com/api/id/covid19/hospitals\">\n            Dekontaminasi\n          </a>\n          <br />- Zona Resiko:\n          <a href=\"https://covid19.go.id/peta-risiko\">\n            Satgas Penanganan Covid 19 Peta Resiko Indonesia\n          </a>\n        </p>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Tentang;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport ReactLoading from \"react-loading\";\n\nconst Contributors = ({ isLoading, data }) => {\n  if (isLoading)\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <ReactLoading\n          type={\"spinningBubbles\"}\n          color={\"#2d6187\"}\n          height={\"10%\"}\n          width={\"10%\"}\n          className=\"mt-3 p-5\"\n        />\n      </div>\n    );\n  const renderContributors = () => {\n    return data.map((contributor, index) => {\n      const { image, name, link } = contributor; //destructuring\n      return (\n        <Col md={2} sm={12}>\n          <Row className=\"justify-content-center\">\n            <img\n              src={image}\n              className=\"img-fluid img-thumbnail rounded-circle\"\n              alt=\"avatar-1\"\n              style={{ width: \"35%\" }}\n            />\n          </Row>\n          <Row className=\"justify-content-center mt-3\">\n            <h5>{name}</h5>\n          </Row>\n          <Row className=\"justify-content-center mt-3 mb-3\">\n            <a href={link}>{link}</a>\n          </Row>\n        </Col>\n      );\n    });\n  };\n  return (\n    <Container fluid>\n      <Row className=\"p-5\">\n        <h2>Contributors</h2>\n      </Row>\n      <Row className=\"justify-content-center\">{renderContributors()}</Row>\n    </Container>\n  );\n};\n\nexport default Contributors;\n","import React, { useEffect, useState } from \"react\";\nimport \"./About.css\";\nimport Header from \"../../components/layout/header/pages/Pages\";\nimport Footer from \"../../components/layout/footer/Footer\";\nimport { getContributors } from \"../../api/Api\";\nimport Tentang from \"../../components/contributors/Tentang\";\nimport Contributors from \"../../components/contributors/Contributors\";\n\nfunction About() {\n  const [contributors, setContributors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const getDev = async () => {\n    setLoading(true);\n    let fetchedContributors = await getContributors();\n    let contributorsData = [];\n    let i = 0;\n    for (i; i < fetchedContributors.length; i++) {\n      const response = await fetch(fetchedContributors[i].url);\n      const json = await response.json();\n      contributorsData.push({\n        image: json.avatar_url,\n        link: json.html_url,\n        name: json.name,\n      });\n    }\n    setContributors(contributorsData);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getDev();\n  }, []);\n  return (\n    <>\n      <Header />\n      <Tentang />\n      <Contributors isLoading={loading} data={contributors} />\n      <Footer />\n    </>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\nimport Highcharts from \"highcharts\";\nimport highchartsMap from \"highcharts/modules/map\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport proj4 from \"proj4\";\nimport mapDataID from \"@highcharts/map-collection/countries/id/id-all.geo.json\";\nimport { Container } from \"reactstrap\";\nhighchartsMap(Highcharts);\n\nfunction Map({\n  isLoading,\n  datasetMerah,\n  datasetOranye,\n  datasetKuning,\n  datasetHijau,\n}) {\n  if (typeof window !== \"undefined\") {\n    window.proj4 = window.proj4 || proj4;\n  }\n  const options = {\n    chart: {\n      map: \"countries/id/id-all\",\n      backgroundColor: \"#eee\",\n      animation: true,\n      height: \"35%\",\n    },\n    title: {\n      text: \"Peta Zona Resiko Covid19 di Indonesia\",\n      useHTML: false,\n    },\n    credits: {\n      enabled: false,\n    },\n    mapNavigation: {\n      enabled: true,\n    },\n    tooltip: {\n      headerFormat: \"\",\n      pointFormat: \"<b>{point.z}</b><br><b>{point.keyword}</b>\",\n    },\n    series: [\n      {\n        // Use the gb-all map with no data as a basemap\n        name: \"Basemap\",\n        mapData: mapDataID,\n        borderColor: \"#A0A0A0\",\n        nullColor: \"rgba(200, 200, 200, 0.3)\",\n        animation: true,\n        showInLegend: false,\n      },\n      {\n        // Specify points using lat/lon\n        type: \"mappoint\",\n        name: \"zona merah (tinggi)\",\n        color: \"#FF0000\",\n        data: datasetMerah,\n        cursor: \"pointer\",\n      },\n      {\n        // Specify points using lat/lon\n        type: \"mappoint\",\n        name: \"zona oranye (sedang)\",\n        color: \"#ff4b0d\",\n        data: datasetOranye,\n        cursor: \"pointer\",\n      },\n      {\n        // Specify points using lat/lon\n        type: \"mappoint\",\n        name: \"zona kuning (rendah)\",\n        color: \"#dbc300\",\n        data: datasetKuning,\n        cursor: \"pointer\",\n      },\n      {\n        // Specify points using lat/lon\n        type: \"mappoint\",\n        name: \"zona hijau (tidak ada kasus)\",\n        color: \"#006400\",\n        data: datasetHijau,\n        cursor: \"pointer\",\n      },\n    ],\n    responsive: {\n      rules: [\n        {\n          condition: {\n            maxWidth: 500,\n          },\n          // Make the labels less space demanding on mobile\n          chartOptions: {\n            legend: {\n              enabled: false,\n            },\n          },\n        },\n      ],\n    },\n  };\n  if (isLoading) {\n    return (\n      <>\n        <div className=\"d-flex justify-content-center\">\n          <ReactLoading\n            type={\"spinningBubbles\"}\n            color={\"#2d6187\"}\n            height={\"10%\"}\n            width={\"10%\"}\n            className=\"mt-3 p-5\"\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <h5>Memuat Zona</h5>\n        </div>\n      </>\n    );\n  }\n  return (\n    <Container fluid>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        constructorType={\"mapChart\"}\n      />\n    </Container>\n  );\n}\n\nexport default Map;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ClearButton = styled.button`\n  background-color: rgb(41, 121, 255);\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField\n      id=\"search\"\n      type=\"text\"\n      placeholder=\"Cari Kota\"\n      aria-label=\"Search Input\"\n      value={filterText}\n      onChange={onFilter}\n    />\n    <ClearButton type=\"button\" onClick={onClear}>\n      <div className=\"text-white\">X</div>\n    </ClearButton>\n  </>\n);\n\nexport default FilterComponent;\n","import React, { useMemo, useState } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport FilterComponent from \"./filters/FilterComponent\";\nimport ReactLoading from \"react-loading\";\n\nconst ZoneTable = ({ isLoading, data }) => {\n  const [filterText, setFilterText] = useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\n  const filteredItems = data.filter(\n    (item) =>\n      item.kota && item.kota.toLowerCase().includes(filterText.toLowerCase())\n  );\n  const subHeaderComponenetMemo = useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n    return (\n      <FilterComponent\n        onFilter={(e) => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    );\n  }, [filterText, resetPaginationToggle]);\n  const columns = [\n    {\n      name: <h4>Kabupaten / Kota</h4>,\n      selector: \"kota\",\n      sortable: true,\n    },\n    {\n      name: <h4>Status</h4>,\n      selector: \"status\",\n      sortable: true,\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.status === \"RESIKO TINGGI\",\n      style: {\n        color: \"white\",\n        backgroundColor: \"rgba(242, 38, 19, 0.9)\",\n      },\n    },\n    {\n      when: (row) => row.status === \"RESIKO SEDANG\",\n      style: {\n        color: \"white\",\n        backgroundColor: \"#ff4b0d\",\n      },\n    },\n    {\n      when: (row) => row.status === \"RESIKO RENDAH\",\n      style: {\n        color: \"white\",\n        backgroundColor: \"rgba(248, 148, 6, 0.9)\",\n      },\n    },\n    {\n      when: (row) => row.status === \"TIDAK ADA KASUS\",\n      style: {\n        color: \"white\",\n        backgroundColor: \"rgba(63, 195, 128, 0.9)\",\n      },\n    },\n  ];\n  if (isLoading) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <ReactLoading\n          type={\"spinningBubbles\"}\n          color={\"#2d6187\"}\n          height={\"10%\"}\n          width={\"10%\"}\n          className=\"mt-3 p-5\"\n        />\n      </div>\n    );\n  }\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center\">\n        <Col md={10} sm={12}>\n          <DataTable\n            title={<h2>Tabel Zona Resiko di Indonesia</h2>}\n            columns={columns}\n            data={filteredItems}\n            pagination\n            paginationResetDefaultPage={resetPaginationToggle}\n            paginationComponentOptions={{\n              rowsPerPageText: \"Jumlah Baris\",\n            }}\n            subHeader\n            subHeaderComponent={subHeaderComponenetMemo}\n            conditionalRowStyles={conditionalRowStyles}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ZoneTable;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nfunction RiskPieChart({ zoneColor }) {\n  let options = {\n    labels: [\n      \"Resiko Tinggi\",\n      \"Resiko Sedang\",\n      \"Resiko Rendah\",\n      \"Tidak ada kasus\",\n    ],\n    colors: [\n      \"rgba(242, 38, 19, 0.9)\",\n      \"#ff4b0d\",\n      \"rgba(248, 148, 6, 0.9)\",\n      \"rgba(63, 195, 128, 0.9)\",\n    ],\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 300,\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n  };\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center mt-5 p-3\">\n        <h2>Persentase Zona Resiko di Indonesia</h2>\n      </Row>\n      <Row className=\"justify-content-center mb-3\">\n        <Chart\n          options={options}\n          series={[zoneColor[0], zoneColor[1], zoneColor[2], zoneColor[3]]}\n          width={500}\n          type=\"pie\"\n        />\n      </Row>\n    </Container>\n  );\n}\n\nexport default RiskPieChart;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../../components/layout/header/pages/Pages\";\nimport Footer from \"../../components/layout/footer/Footer\";\nimport Map from \"../../components/map/Map\";\nimport ZoneTable from \"../../components/tables/ZoneTable\";\nimport { getZonaIndonesia } from \"../../api/Api\";\nimport RiskPieChart from \"../../components/graphs/RiskPieChart\";\n\n\nfunction Zone() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [dataMerah, setDataMerah] = useState([]);\n  const [dataOranye, setDataOranye] = useState([]);\n  const [dataKuning, setDataKuning] = useState([]);\n  const [dataHijau, setDataHijau] = useState([]);\n  const fetchMapData = async () => {\n    setIsLoading(true);\n    let fetchedData = await getZonaIndonesia();\n    let dataset = [];\n    let datasetMerah = [];\n    let datasetOranye = [];\n    let datasetKuning = [];\n    let datasetHijau = [];\n    let colors = [\"#006400\", \"#dbc300\", \"#ff4b0d\", \"#FF0000\"];\n    fetchedData.forEach((element) => {\n      dataset.push({\n        kota: element.name,\n        status: element.status,\n      });\n      if (element.nilai === 3) {\n        datasetMerah.push({\n          z: element.status,\n          keyword: element.name,\n          lat: parseFloat(element.latitude),\n          lon: parseFloat(element.longitude),\n          color: colors[element.nilai],\n        });\n      } else if (element.nilai === 2) {\n        datasetOranye.push({\n          z: element.status,\n          keyword: element.name,\n          lat: parseFloat(element.latitude),\n          lon: parseFloat(element.longitude),\n          color: colors[element.nilai],\n        });\n      } else if (element.nilai === 1) {\n        datasetKuning.push({\n          z: element.status,\n          keyword: element.name,\n          lat: parseFloat(element.latitude),\n          lon: parseFloat(element.longitude),\n          color: colors[element.nilai],\n        });\n      } else if (element.nilai === 0) {\n        datasetHijau.push({\n          z: element.status,\n          keyword: element.name,\n          lat: parseFloat(element.latitude),\n          lon: parseFloat(element.longitude),\n          color: colors[element.nilai],\n        });\n      }\n    });\n    setData(dataset);\n    setDataMerah(datasetMerah);\n    setDataOranye(datasetOranye);\n    setDataKuning(datasetKuning);\n    setDataHijau(datasetHijau);\n    setIsLoading(false);\n  };\n  let dataWarna=[dataMerah.length,dataOranye.length,dataKuning.length,dataHijau.length];\n  useEffect(() => {\n    fetchMapData();\n  }, []);\n  return (\n    <>\n      <Header />\n      <Map\n        isLoading={isLoading}\n        datasetMerah={dataMerah}\n        datasetOranye={dataOranye}\n        datasetKuning={dataKuning}\n        datasetHijau={dataHijau}\n      />\n      <RiskPieChart zoneColor={dataWarna}/>\n      <ZoneTable isLoading={isLoading} data={data} />\n      \n      \n      <Footer />\n    </>\n  );\n}\n\nexport default Zone;\n","import { Home, Country, Province, About, Zone } from \"../pages\";\n\nconst Routes = [\n  { path: \"/\", component: Home },\n  { path: \"/country\", component: Country },\n  { path: \"/province\", component: Province },\n  { path: \"/about\", component: About },\n  { path: \"/zona\", component: Zone },\n];\n\nexport default Routes;\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport routes from \"./config/Routes\";\n\nfunction App() {\n  return (\n    <>\n      <React.Fragment>\n        <HashRouter>\n          <Switch>\n            {routes.map((route, idx, props) => (\n              <Route\n                key={idx}\n                path={route.path}\n                exact\n                component={route.component}\n                {...props}\n              />\n            ))}\n          </Switch>\n        </HashRouter>\n      </React.Fragment>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}